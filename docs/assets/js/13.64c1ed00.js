(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{209:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"golang-01-variable-and-constant"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#golang-01-variable-and-constant"}},[t._v("#")]),t._v(" Golang-01 Variable And Constant")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Golang")]),t._v(" 语言基础 - 变量和常量")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#关键字"}},[t._v("关键字")])]),a("li",[a("a",{attrs:{href:"#保留字"}},[t._v("保留字")])]),a("li",[a("a",{attrs:{href:"#变量"}},[t._v("变量")]),a("ul",[a("li",[a("a",{attrs:{href:"#变量声明"}},[t._v("变量声明")])]),a("li",[a("a",{attrs:{href:"#变量初始化"}},[t._v("变量初始化")])]),a("li",[a("a",{attrs:{href:"#快速声明"}},[t._v("快速声明")])]),a("li",[a("a",{attrs:{href:"#匿名变量"}},[t._v("匿名变量")])]),a("li",[a("a",{attrs:{href:"#类型推倒"}},[t._v("类型推倒")])])])]),a("li",[a("a",{attrs:{href:"#常量"}},[t._v("常量")])]),a("li",[a("a",{attrs:{href:"#iota"}},[t._v("iota")]),a("ul",[a("li",[a("a",{attrs:{href:"#常见用途"}},[t._v("常见用途")])])])]),a("li",[a("a",{attrs:{href:"#注意事项"}},[t._v("注意事项")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),a("p",[a("code",[t._v("Golang")]),t._v(" 中有 25 个关键字：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fallthrough")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("\n")])])]),a("h2",{attrs:{id:"保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保留字"}},[t._v("#")]),t._v(" 保留字")]),t._v(" "),a("p",[t._v("此外，在 "),a("code",[t._v("Golang")]),t._v(" 语言中还有 37 个保留字。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("  Constants"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n\n  Types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int8")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int16")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint16")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex128")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex64")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("rune")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\n  Functions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("make")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("new")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("append")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("copy")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("close")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("delete")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("real")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("imag")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("panic")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("recover")]),t._v("\n")])])]),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("h3",{attrs:{id:"变量声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[t._v("#")]),t._v(" 变量声明")]),t._v(" "),a("p",[t._v("变量声明以关键字 "),a("code",[t._v("var")]),t._v(" 开头，变量类型放在变量的后面，行尾无需分号。")]),t._v(" "),a("ul",[a("li",[t._v("声明格式")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量名 变量类型\n")])])]),a("h4",{attrs:{id:"标准声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准声明"}},[t._v("#")]),t._v(" 标准声明")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isOk "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n")])])]),a("h4",{attrs:{id:"批量声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量声明"}},[t._v("#")]),t._v(" 批量声明")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  a "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n  c "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n  d "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"变量初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量初始化"}},[t._v("#")]),t._v(" 变量初始化")]),t._v(" "),a("h4",{attrs:{id:"默认初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认初始化"}},[t._v("#")]),t._v(" 默认初始化")]),t._v(" "),a("p",[a("code",[t._v("Golang")]),t._v(" 在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。")]),t._v(" "),a("p",[t._v("每个变量会被初始化成其类型的默认值，例如：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("整型/浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v('""')])]),t._v(" "),a("tr",[a("td",[t._v("布尔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("切片/函数/指针")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("nil")])])])]),t._v(" "),a("h4",{attrs:{id:"手动赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动赋值"}},[t._v("#")]),t._v(" 手动赋值")]),t._v(" "),a("p",[t._v("我们也可在声明变量的时候为其指定初始值。变量初始化的标准格式如下")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量名 类型 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 表达式\n")])])]),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n")])])]),a("h4",{attrs:{id:"批量赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量赋值"}},[t._v("#")]),t._v(" 批量赋值")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => name = "123", age = 20')]),t._v("\n")])])]),a("h3",{attrs:{id:"快速声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速声明"}},[t._v("#")]),t._v(" 快速声明")]),t._v(" "),a("p",[t._v("在函数内部，可以使用更简略的 "),a("code",[t._v(":=")]),t._v(" 方式声明并初始化变量。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量m")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处声明局部变量 m")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"匿名变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名变量"}},[t._v("#")]),t._v(" 匿名变量")]),t._v(" "),a("p",[t._v("在使用多重赋值时，如果想要忽略某个值，可以使用 "),a("strong",[t._v("匿名变量（anonymous variable）")]),t._v("。")]),t._v(" "),a("p",[t._v("匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。")]),t._v(" "),a("p",[t._v("匿名变量用一个下划线 "),a("code",[t._v("_")]),t._v(" 表示")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Q1mi"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"类型推倒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型推倒"}},[t._v("#")]),t._v(" 类型推倒")]),t._v(" "),a("p",[t._v("有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n")])])]),a("h2",{attrs:{id:"常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),a("p",[t._v("常量的声明和变量声明非常类似，只是把 "),a("code",[t._v("var")]),t._v(" 换成了 "),a("code",[t._v("const")]),t._v("，"),a("strong",[t._v("常量在定义时必须赋值")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标准声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7182")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 批量声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    pi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415")]),t._v("\n    e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7182")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("const")]),t._v(" 同时声明多个常量时，如果省略了值则表示和上面一行的值相同。 例如：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    n2\n    n3\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n1 = n2 = n3 = 100")]),t._v("\n")])])]),a("h2",{attrs:{id:"iota"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iota"}},[t._v("#")]),t._v(" iota")]),t._v(" "),a("p",[a("code",[t._v("iota")]),t._v(" 是 "),a("code",[t._v("Golang")]),t._v(" 的常量计数器，"),a("strong",[t._v("只能在常量的表达式中使用")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("iota")]),t._v(" 在 "),a("code",[t._v("const")]),t._v(" 关键字出现时将被重置为 0。")]),t._v(" "),a("li",[a("code",[t._v("const")]),t._v(" 中每新增一行常量声明将使 "),a("code",[t._v("iota")]),t._v(" 计数一次("),a("code",[t._v("iota")]),t._v(" 可理解为 "),a("code",[t._v("const")]),t._v(" 语句块中的行索引)。")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n  n2        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  n3        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n  n4        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"常见用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见用途"}},[t._v("#")]),t._v(" 常见用途")]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("_")]),t._v(" 跳过某些值")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n  n2        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v("\n  n4        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("声明中间插队")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n  n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n  n3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n  n4        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" n5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("ul",[a("li",[t._v("定义数量级")])]),t._v(" "),a("p",[t._v("这里的<<表示左移操作，1<<10 表示将 1 的二进制表示向左移 10 位，也就是由 1 变成了 10000000000，也就是十进制的 1024。")]),t._v(" "),a("p",[t._v("同理 2<<2 表示将 2 的二进制表示向左移 2 位，也就是由 10 变成了 1000，也就是十进制的 8。）")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("\n  KB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即 乘以2的n次方，KB = 1*2^10 = 1024")]),t._v("\n  MB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  GB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  TB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  PB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("多个 iota 定义在一行")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1, 2")]),t._v("\n  c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2, 3")]),t._v("\n  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3, 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),a("ul",[a("li",[t._v("函数外的每个语句都必须以关键字开始（"),a("code",[t._v("var")]),t._v(", "),a("code",[t._v("const")]),t._v(", "),a("code",[t._v("func")]),t._v(" 等）")]),t._v(" "),a("li",[a("code",[t._v(":=")]),t._v(" 不能使用在函数外。")]),t._v(" "),a("li",[a("code",[t._v("_")]),t._v(" 多用于占位，表示忽略值。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);